/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion.Empleados;

import Datos.FafricaConexion;
import Entidades.Cliente;
import Entidades.Cobertura;
import Entidades.Poliza;
import Entidades.Vehiculo;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Types;
import static java.sql.Types.DATE;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import oracle.sql.DATE;

/**
 *
 * @author DarKMeYeR
 */
public class GenerarPoliza extends javax.swing.JFrame {

    EntityManagerFactory emf = Persistence.createEntityManagerFactory("SeguroEscritorioPU");
    EntityManager em = emf.createEntityManager();
    String mensaje = ""; 
    public GenerarPoliza() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txaDocumento = new javax.swing.JTextArea();
        txtRuta = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();
        txtRut = new javax.swing.JTextField();
        lblMensaje = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Poliza");

        txaDocumento.setColumns(20);
        txaDocumento.setRows(5);
        jScrollPane1.setViewportView(txaDocumento);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        lblMensaje.setText("                         ");

        jLabel1.setText("RUT:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addGap(0, 64, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRut, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerar)
                    .addComponent(txtRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMensaje)
                    .addComponent(jLabel1))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        JFileChooser dlg = new JFileChooser();
        int option = dlg.showSaveDialog(this);
        if(option == JFileChooser.APPROVE_OPTION)
        {
            File f = dlg.getSelectedFile();
            txtRuta.setText(f.toString());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        
        try {
            if(!txtRut.getText().isEmpty())
            {
                if(!txtRuta.getText().isEmpty())
                {
                    String rut = txtRut.getText();
                    List<Cliente> listCliente = buscarClienteRut(rut);
                    if(listCliente != null)
                    {
                        Poliza poliza = new Poliza();
                        poliza.setIdPoliza(Long.parseLong(listCliente.get(0).getIdCliente().substring(0, listCliente.get(0).getIdCliente().length()-1)));
                        poliza.setIdCliente(listCliente.get(0).getIdCliente());
                        
                        SimpleDateFormat sdf=new SimpleDateFormat("dd-MM-yyyy");
                        Calendar calNow = Calendar.getInstance();
                        calNow.add(Calendar.MONTH, +1);
                        Date date1 = calNow.getTime();
                        String fechaActual = sdf.format(date1);
                        poliza.setFechaVencimiento(sdf.parse(fechaActual));
                        
                        poliza.setAlDia("t");
                        List<Vehiculo> listVehiculos = buscarVehiculosRut(rut);                
                        if(listVehiculos != null)
                        {
                            int total = 0;
                            listCliente.get(0).setVehiculoCollection(listVehiculos);
                            Cliente cli = listCliente.get(0);
                            String activo = cli.getActivo().equals("t") ? "Si" : "No";
                            String doc = "";
                            doc += "*******************************POLIZA DE SEGURO AUTOMOTRIZ**********************************\n";
                            doc += "                                                                                                       \n";
                            doc += "NOMBRE: "+cli.getNombres()+" "+cli.getApellidos()+"          \t \t Direccion: "+cli.getDireccion()+"\n";
                            doc += "Activo: "+activo+"                                           \t Correo: "+cli.getCorreo()+"\n";
                            doc += "Vencimiento Pago: "+fechaActual+"\n";
                            doc += "                                                                                                      \n";
                            doc += "*******************************************************************************************************\n";
                            doc += "*******************************************VEHICULOS**********************************************\n";
                            for (Vehiculo ve : cli.getVehiculoCollection()) 
                            {
                            doc += "Marca: "+ve.getModeloIdModelo().getMarcaIdMarca().getNombre()+"                            \t \t Modelo: "+ve.getModeloIdModelo().getNombre()+" \n";
                            doc += "Patente: "+ve.getPatente()+"                             \t \t AÃ±o: "+ve.getAno()+" \n";
                            doc += "Valor Fiscal : $"+ve.getValorFiscal()+"                             \n";
                            doc += "-----------------------------------------------------COBERTURAS----------------------------------------------------\n";
                                int subtotal = 0;
                                for (Cobertura cobertura : ve.getCoberturaCollection()) {
                                    subtotal += cobertura.getPrima();
                                    doc += cobertura.getNombre()+": $"+ve.getValorFiscal()+" \t Deducible: "+cobertura.getDeducible()+"%\t Prima: $"+cobertura.getPrima()+"\n";                                    
                                }
                                total += subtotal;
                                doc += "SUBTOTAL: $"+subtotal+"\n";
                                doc += "IVA: $"+subtotal*0.19+"\n";
                                doc += "TOTAL: $"+(subtotal+(subtotal*0.19))+"\n";
                                doc += "******************************************************************************************************\n";
                            }    
                            doc += "                                                                                                              \n";
                            total += total * 0.19;
                            doc += "\t\t TOTAL A PAGAR: $"+total+"\n";
                            poliza.setTotalPagar(total);
                            doc += "                                                                                                              \n";
                            doc += "                                                                                                              \n";
                            doc += "******************************************************************************************************\n";
                            doc += "******************************************************************************************************\n";

                            doc += "                                                                                                              \n";
                            doc += "                                                                                                              \n";
                            doc += "                                                                                                              \n";
                            String indented = doc.replaceAll("(?m)^", "\t");
                            txaDocumento.setText(indented);
                            
                            Insertarpoliza(poliza);
                            

                            try {
                                String ruta=txtRuta.getText();
                                String contenido=txaDocumento.getText();
                                FileOutputStream archivo = new FileOutputStream(ruta+".pdf");
                                Document docu = new Document();
                                PdfWriter.getInstance(docu, archivo);
                                docu.open();
                                docu.add(new Paragraph(contenido));

                                docu.close();

                                JOptionPane.showMessageDialog(null, "PDF Creado");                                
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e.getMessage(),"ERROR",0);
                            }
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Cliente No registrado","",2);
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Selecciona la Ruta Para Guardar","",2);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Ingresa El RUT del Cliente","",2);
            }
        } catch (Exception e) {
        }        
    }//GEN-LAST:event_btnGenerarActionPerformed

        
    private List<Cliente> buscarClienteId(int id)
    {
        try {
            TypedQuery consulta = em.createNamedQuery("Cliente.findByIdCliente", Cliente.class);
            List<Cliente> listCliente = consulta.setParameter("idCliente", id+"c").getResultList();
            
            if(listCliente.size() > 0)
            {
                return listCliente;
            }
            else
            {
                return null;
            }
        } catch (Exception e) {
            return null;
        }
    }
    
    private List<Cobertura> buscarCoberturaIdVehiculo(Vehiculo ve)
    {
        try {
            TypedQuery consulta = em.createNamedQuery("Cobertura.findByIdVehiculo", Cobertura.class);
            List<Cobertura> listCobertura = consulta.setParameter("vehiculoIdVehiculo", ve).getResultList();
            
            if(listCobertura.size() > 0)
            {
                return listCobertura;
            }
            else
            {
                return null;
            }
        } catch (Exception e) {
            return null;
        }
    }
    
    private List<Cliente> buscarClienteRut(String rut)
    {
        try {
            rut = rut.replace(".", "");
            rut = rut.replace("-", "");
            TypedQuery consulta = em.createNamedQuery("Cliente.findByRut", Cliente.class);
            List<Cliente> listCliente = consulta.setParameter("rut", rut).getResultList();
            
            if(listCliente.size() > 0)
            {
                return listCliente;
            }
            else
            {
                return null;
            }
        } catch (Exception e) {
            return null;
        }
    }
    
    private List<Vehiculo> buscarPatente(String patente)
    {
        try {
            TypedQuery consulta = em.createNamedQuery("Vehiculo.findByPatente", Vehiculo.class);
            List<Vehiculo> listVehiculo = consulta.setParameter("patente", patente).getResultList();
            
            if(listVehiculo.size() > 0)
            {
                return listVehiculo;
            }
            else
            {
                return null;
            }
        } catch (Exception e) {
            return null;
        }
    }
    
    private List<Vehiculo> buscarVehiculosRut(String rut)
    {
        try {
            rut = rut.replace(".", "");
            rut = rut.replace("-", "");
            TypedQuery consulta = em.createNamedQuery("Vehiculo.findByRut", Vehiculo.class);
            List<Vehiculo> listVehiculo = consulta.setParameter("rut", rut).getResultList();
            
            if(listVehiculo.size() > 0)
            {
                return listVehiculo;
            }
            else
            {
                return null;
            }
        } catch (Exception e) {
            return null;
        }
    }
    
    private List<Vehiculo> buscarVehiculosId(String id)
    {
        try {
            TypedQuery consulta = em.createNamedQuery("Vehiculo.findByIdVehiculo", Vehiculo.class);
            List<Vehiculo> listVehiculo = consulta.setParameter("idVehiculo", id).getResultList();
            
            if(listVehiculo.size() > 0)
            {
                return listVehiculo;
            }
            else
            {
                return null;
            }
        } catch (Exception e) {
            return null;
        }
    }
    
    private String Insertarpoliza(Poliza poliza) throws SQLException {
        Connection cn = new FafricaConexion().Conectar();
            java.sql.Date sqlDate = new java.sql.Date(poliza.getFechaVencimiento().getTime());
        
            CallableStatement cs = cn.prepareCall("{call ? := F_INSERT_POLIZA(?,?,?,?,?)}");
            cs.registerOutParameter(1, Types.VARCHAR);

            cs.setLong(2, poliza.getIdPoliza());
            cs.setString(3, poliza.getAlDia());
            cs.setDate(4, sqlDate);
            cs.setLong(5, poliza.getTotalPagar());
            cs.setString(6, poliza.getIdCliente());
            cs.executeUpdate();
            return cs.getString(1);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JTextArea txaDocumento;
    private javax.swing.JTextField txtRut;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables

    
}
